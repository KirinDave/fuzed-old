#!/usr/bin/env ruby

# require 'fuzed'
require File.join(File.dirname(__FILE__), *%w[.. lib fuzed])

require 'optparse'
require 'pp'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: fuzed command [options]"

  opts.on("-c CONFIG", "--config CONFIG", "Path to Yaws config file") do |n|
    options[:config] = n
  end
  
  opts.on("-n NAME", "--name NAME", "Node name") do |n|
    options[:name] = n
  end
  
  opts.on("-m NAME", "--master NAME", "Master node name") do |n|
    options[:master_name] = n
  end
  
  opts.on("-o NUMNODES", "--num_nodes NUMNODES", "Number of nodes to run") do |n|
    options[:num_nodes] = n
  end
  
  opts.on("-r RAILS_ROOT", "--rails RAILS_ROOT", "Path to Rails root") do |a|
    options[:rails] = a
  end
end.parse!
  
command = ARGV[0]

case command
when 'start'
  config = options[:config]
  nodename = options[:name]
  
  puts "Starting yaws server with name: #{nodename}"
  cmd = %Q{yaws --conf #{config} --pa #{Fuzed.relative 'ebin'} \
           -name "#{nodename}" --runmod fuzed \
           --erlarg '+Bc +K true -smp enabled'}.squeeze(' ')
  puts cmd
  exec(cmd)
when 'join'
  nodename = options[:name]
  master = options[:master_name]
  num_nodes = options[:num_nodes]
  rails = options[:rails]
  
  puts "Starting a client named #{nodename} offering service to #{master}"
  puts "Each node will run: 'fuzed-adapter #{rails}'"
  Dir.chdir(Fuzed.root)
  cmd = %Q{erl -boot start_sasl \
           +Bc +K true -smp enabled \
           -name "#{nodename}" \
           -pa #{Fuzed.relative 'ebin'} \
           -fuzed_node master "'#{master}'" \
           -fuzed_node command '"fuzed-adapter #{rails}"' \
           -fuzed_node num_nodes #{num_nodes || 2} \
           -run fuzed_node start}.squeeze(' ')
  puts cmd
  exec(cmd)
when 'local'
  rails = File.expand_path('.')
  config = "/tmp/fuzed-local.conf"
  
  puts "Starting yaws server with name: #{nodename}"
  
  File.open(config, 'w') do |f|
    f.write `#{File.join(File.dirname(__FILE__), *%w[fuzed-conf])} #{rails} 3000`
  end
  
  cmd = %Q{yaws --conf #{config} \
           --pa #{Fuzed.relative 'ebin'} \
           --runmod stack \
           --erlarg '+Bc +K true -smp enabled -fuzed_node command \
           "\\\"fuzed-adapter #{rails}\\\""'}.squeeze(' ')
  puts(cmd)
  exec(cmd)
else
  puts 'Invalid command'
end

__END__

ruby-prof -p graph_html -f graph.html