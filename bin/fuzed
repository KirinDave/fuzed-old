#!/usr/bin/env ruby

# require 'fuzed'
require File.join(File.dirname(__FILE__), *%w[.. lib fuzed])

require 'optparse'
require 'pp'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: fuzed command [options]"

  opts.on("-c CONFIG", "--config CONFIG", "Path to Yaws config file") do |n|
    options[:config] = n
  end
  
  opts.on("-n NAME", "--name NAME", "Node name") do |n|
    options[:name] = n
  end
  
  opts.on("-m NAME", "--master NAME", "Master node name") do |n|
    options[:master_name] = n
  end
  
  opts.on("-r RAILS_ROOT", "--rails RAILS_ROOT", "Path to Rails root") do |a|
    options[:rails] = a
  end
end.parse!
  
command = ARGV[0]

case command
when 'start'
  config = options[:config]
  nodename = options[:name]
  
  puts "Starting yaws server with name: #{nodename}"
  system %Q{yaws --conf #{config} --pa #{Fuzed.relative 'ebin'} \
            -name "#{nodename}" --runmod fuzed \
            --erlarg '+Bc +K true -smp enabled'}
when 'join'
  nodename = options[:name]
  master = options[:master_name]
  rails = options[:rails]
  
  puts "Starting a client named #{nodename} offering service to #{master}"
  puts "Each node will run: 'fuzed-adapter #{rails}'"
  cmd = %Q{cd #{Fuzed.root}; erl -boot start_sasl \
            +Bc +K true -smp enabled \
            -name "#{nodename}" \
            -pa #{Fuzed.relative 'ebin'} \
            -fuzed_node master "'#{master}'" \
            -fuzed_node command '"#{Fuzed.root}/bin/fuzed-adapter #{rails}"' \
            -run fuzed_node start}.squeeze(' ')
  puts cmd
  system(cmd)
else
  puts 'Invalid command'
end

__END__

ruby-prof -p graph_html -f graph.html